{"ast":null,"code":"var _s = $RefreshSig$();\n\nconst usePostRequest = (pathname, body, keyFn) => {\n  _s();\n\n  const {\n    mutate\n  } = useSWRConfig();\n  useSWR();\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    setData(undefined);\n    setError(undefined); //Sends request to db, then updates based on userID\n\n    jsonResponseFetcher(pathname, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(data => {\n      setData(data);\n      mutate(keyFn(data), data, false);\n    }).catch(setError);\n  }, [body]);\n  return {\n    data,\n    error,\n    loading: data == null && error == null\n  };\n};\n\n_s(usePostRequest, \"Osrhp/9PcYke1kUPp2QqEgutFU0=\", true);\n\nexport default usePostRequest;","map":{"version":3,"sources":["/Users/charlespezeshki/Documents/GitHub/CS425-Senior-Project/client/src/hooks/swr/usePostRequest.js"],"names":["usePostRequest","pathname","body","keyFn","mutate","useSWRConfig","useSWR","data","setData","useState","error","setError","useEffect","undefined","jsonResponseFetcher","method","headers","JSON","stringify","then","catch","loading"],"mappings":";;AAAA,MAAMA,cAAc,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,KAA2B;AAAA;;AAChD,QAAM;AAACC,IAAAA;AAAD,MAAWC,YAAY,EAA7B;AACAC,EAAAA,MAAM;AAEN,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,EAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,EAAlC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,OAAO,CAACK,SAAD,CAAP;AACAF,IAAAA,QAAQ,CAACE,SAAD,CAAR,CAFc,CAGd;;AACAC,IAAAA,mBAAmB,CAACb,QAAD,EAAW;AAC5Bc,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFmB;AAG5Bd,MAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAehB,IAAf;AAHsB,KAAX,CAAnB,CAKGiB,IALH,CAKQZ,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,MAAM,CAACD,KAAK,CAACI,IAAD,CAAN,EAAcA,IAAd,EAAoB,KAApB,CAAN;AACD,KARH,EASGa,KATH,CASST,QATT;AAUD,GAdQ,EAcN,CAACT,IAAD,CAdM,CAAT;AAgBA,SAAO;AACLK,IAAAA,IADK;AAELG,IAAAA,KAFK;AAGLW,IAAAA,OAAO,EAAEd,IAAI,IAAI,IAAR,IAAgBG,KAAK,IAAI;AAH7B,GAAP;AAKD,CA5BD;;GAAMV,c;;AA8BN,eAAeA,cAAf","sourcesContent":["const usePostRequest = (pathname, body, keyFn) => {\n  const {mutate} = useSWRConfig()\n  useSWR()\n\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    setData(undefined)\n    setError(undefined)\n    //Sends request to db, then updates based on userID\n    jsonResponseFetcher(pathname, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(body),\n    })\n      .then(data => {\n        setData(data)\n        mutate(keyFn(data), data, false)\n      })\n      .catch(setError)\n  }, [body])\n\n  return {\n    data,\n    error,\n    loading: data == null && error == null,\n  }\n}\n\nexport default usePostRequest"]},"metadata":{},"sourceType":"module"}