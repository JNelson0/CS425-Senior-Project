{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { jsonResponseFetcher } from \"./swr\";\n\nconst useNewUser = params => {\n  _s();\n\n  const {\n    mutate\n  } = useSWRConfig();\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true); //Sends request to db, then updates based on userID\n\n    jsonResponseFetcher(\"/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(params)\n    }).then(user => {\n      setData(user);\n      mutate(`/users/{user.id}`, user, false);\n    }).catch(setError).finally(() => {\n      setLoading(false);\n    });\n  }, [params]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useNewUser, \"NJaRRgIrw0u7Uu80Kb3aFmLy0hQ=\", true);","map":{"version":3,"sources":["/Users/charlespezeshki/Documents/GitHub/CS425-Senior-Project/client/src/hooks/useNewUser.js"],"names":["useEffect","useState","useSWR","jsonResponseFetcher","useNewUser","params","mutate","useSWRConfig","data","setData","error","setError","loading","setLoading","method","headers","body","JSON","stringify","then","user","catch","finally"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAAQC,mBAAR,QAAkC,OAAlC;;AAEA,MAAMC,UAAU,GAAGC,MAAM,IAAI;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAWC,YAAY,EAA7B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAAC,IAAD,CAAV,CADc,CAEd;;AACAV,IAAAA,mBAAmB,CAAC,OAAD,EAAU;AAC3BW,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,MAAf;AAHqB,KAAV,CAAnB,CAKGc,IALH,CAKQC,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACAd,MAAAA,MAAM,CAAE,kBAAF,EAAqBc,IAArB,EAA2B,KAA3B,CAAN;AACD,KARH,EASGC,KATH,CASSV,QATT,EAUGW,OAVH,CAUW,MAAM;AACbT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZH;AAaD,GAhBQ,EAgBN,CAACR,MAAD,CAhBM,CAAT;AAkBA,SAAO;AACLG,IAAAA,IADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CA7BD;;GAAMR,U","sourcesContent":["import {useEffect, useState} from \"react\"\nimport useSWR from \"swr\"\nimport {jsonResponseFetcher} from \"./swr\"\n\nconst useNewUser = params => {\n  const {mutate} = useSWRConfig()\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    //Sends request to db, then updates based on userID\n    jsonResponseFetcher(\"/user\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(params),\n    })\n      .then(user => {\n        setData(user)\n        mutate(`/users/{user.id}`, user, false)\n      })\n      .catch(setError)\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [params])\n\n  return {\n    data,\n    error,\n    loading,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}