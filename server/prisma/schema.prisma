// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum EventType {
  STANDARD
  WORKOUT
}

enum EventMembershipRole {
  OWNER
  INVITEE
}

enum GroupMembershipRole {
  OWNER
  INVITEE
}

enum ExerciseType {
  WEIGHTS
}

// Main Tables

model User {
  id Int @id @default(autoincrement())

  firstName String
  lastName  String

  username     String @unique
  email        String @unique
  passwordSalt String @unique
  passwordHash String

  googleRefreshToken  String? @unique

  eventMemberships  UserMembershipInEvent[]
  groupMemberships  UserMembershipInGroup[]
  exerciseResponses ExerciseResponse[]
}

model Event {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type        EventType
  title       String
  description String
  start       DateTime?
  finish      DateTime

  userMemberships   UserMembershipInEvent[]
  groupMemberships  GroupMembershipInEvent[]
  exercises         Exercise[]
  exerciseResponses ExerciseResponse[]
}

model Group {
  id Int @id @default(autoincrement())

  tag String @unique

  userMemberships  UserMembershipInGroup[]
  eventMemberships GroupMembershipInEvent[]
}

model Exercise {
  id Int @id @default(autoincrement())

  type    ExerciseType
  name    String
  content String

  event             Event              @relation(fields: [eventId], references: [id])
  eventId           Int
  exerciseResponses ExerciseResponse[]
}

model ExerciseResponse {
  id Int @id @default(autoincrement())

  content String

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}

// Membership tables

model UserMembershipInEvent {
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  event   Event @relation(fields: [eventId], references: [id])
  eventId Int

  role EventMembershipRole

  @@id([userId, eventId])
}

model GroupMembershipInEvent {
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int
  event   Event @relation(fields: [eventId], references: [id])
  eventId Int

  role EventMembershipRole

  @@id([groupId, eventId])
}

model UserMembershipInGroup {
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  role GroupMembershipRole

  @@id([userId, groupId])
}
